#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/pointing.h>

#define ALPHA 0
#define CODE  1
#define NAV   2
#define MISC  3
#define CON   4

&caps_word {
  continue-list = <UNDERSCORE MINUS BACKSPACE QMARK>;
};

&mt {
    tapping-term-ms = <150>; 
};

/ {

    conditional_layers {
        compatible = "zmk,conditional-layers";
        misc_layer {
            if-layers = <CODE NAV>;
            then-layer = <MISC>;
        };
    };

    macros {
        // this macro is used to type german umlauts
        ctrl_ralt: ctrl_ralt {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings
                = <&macro_press &kp LCTRL>
                , <&macro_press &kp RALT>
                , <&macro_param_1to1>
                , <&macro_press &kp MACRO_PLACEHOLDER>
                , <&macro_pause_for_release>
                , <&macro_param_1to1>
                , <&macro_release &kp MACRO_PLACEHOLDER>
                , <&macro_release &kp RALT>
                , <&macro_release &kp LCTRL>
                ;
        };
    };


    // NOTE: this is a german keyboard layout.
    keymap {
        compatible = "zmk,keymap";

        alpha { // Layer 0
            // -------------------------------------
            // |   Shift   |    Q       |    W    |    F    |    P    |    B    | ----- |    J    |    L    |    U    |    Y    |    +        |   Shift   |
            // |   Ctrl    |  Shift/A   |    R    |    S    |    T    |    G    | ----- |    M    |    N    |    E    |    I    |    O        |   Ctrl    |
            //             |  Ctrl/Z    |    X    |    C    |    D    |    V    | ----- |    K    |    H    |    ,    |    .    |    -        |  
            //                                    |    -    |    -    |  Space  | ----- |  Enter  |    -    |    -    |
            
            bindings = <
                &sk LSHIFT   &kp Q        &kp W     &kp F     &kp P     &kp B             &kp J     &kp L     &kp U     &kp Z     &kp RBKT      &sk RSHIFT
                &sk LCTRL    &kp A        &kp R     &kp S     &kp T     &kp G             &kp M     &kp N     &kp E     &kp I     &kp O         &sk RCTRL
                             &kp Y        &kp X     &kp C     &kp D     &kp V             &kp K     &kp H     &kp COMMA &kp DOT   &kp FSLH
                                                    &sk LALT  &mo CODE  &kp SPACE         &kp ENTER &mo NAV   &sk RALT 
            >;
        };

        code { // Layer 1
            // -------------------------------------
            // |   &trans   |   ESC          |    F9   |    [        |    ]        |    F7   | ----- |    #         |    *        |    Ü         |    !     |   Bksp          |   &trans   |
            // |   &trans   |    Ä           |    F5   |    ß        |   F10       |   F12   | ----- |    &         |    (        |    )         |    =     |    Ö            |   &trans   |
            //              |    |           |    `    |    <        |    >        |   F11   | ----- |    ?         |    {        |    }         |    /     |    \            |  
            //                                         | &trans      | &trans      | &trans  | ----- | &trans       | &trans      | &trans       |
            
            bindings = <
                  &trans     &kp ESC          &kp F9    &ctrl_ralt N8  &ctrl_ralt N9   &kp F7            &kp BSLH       &kp RBRC       &kp LBKT        &kp EXCL    &kp BSPC           &trans
                  &trans     &kp APOS         &kp F5    &kp MINUS      &kp F10         &kp F12           &kp CARET      &kp STAR       &kp LPAR        &kp RPAR    &kp SEMI           &trans
                             &ctrl_ralt NUBS  &kp PLUS  &kp NUBS       &kp LS(NUBS)    &kp F11           &kp LS(MINUS)  &ctrl_ralt N7  &ctrl_ralt N0   &kp LS(N7)  &ctrl_ralt(MINUS)
                                                        &trans         &trans          &trans            &kp BSPC       &trans         &kp DEL 
            >;
        };

        nav { // Layer 2
            // -------------------------------------
            // |   &trans   |    1           |    2    |    3        |    4        |    5    | ----- |    6         |    7        |    8         |    9     |    0            |   &trans   |
            // |   &trans   |                |         |  ALT + F4   | Lock screen |         | ----- |              |   LEFT      |   DOWN       |    UP    |    RIGHT        |   &trans   |
            //              |    GUI         |         |  CAPS       |   ^/°       |         | ----- |              |   HOME      |   PgDn       |    PgUp  |    End          |  
            //                                         | &trans      | &trans      |  Tab    | ----- |  Enter       | &trans      | &trans       |
            
            bindings = <
                  &trans     &kp N1           &kp N2    &kp N3        &kp N4         &kp N5            &kp N6         &kp N7        &kp N8         &kp N9     &kp N0             &trans
                  &trans     &none            &none     &kp LA(F4)    &kp LG(L)      &none             &none          &kp LEFT      &kp DOWN       &kp UP     &kp RIGHT          &trans
                             &sk LGUI         &none     &caps_word    &kp GRAVE      &none             &none          &kp HOME      &kp PG_DN      &kp PG_UP  &kp END
                                                        &trans        &trans         &kp TAB           &kp ENTER      &trans        &trans                                                      
            >;
        };

        misc { // Layer 3
            // -------------------------------------
            // |   &none    |    F1          |    F2       |    F3       |    F4       |    F5   | ----- |    F6        |    F7         |    F8         |    F9      |    F10          |   &none   |
            // |   &none    |    Mute        |  Vol-       |  Vol+       |             | MB_Left | ----- |  MB_Rigth    | M_LEFT        |  M_DOWN       |   M_UP     |   M_RIGHT       |   &none   |
            //              |    Layer(con)  |             |             |             |  frwd   | ----- |  back        |               |   scroll_dn   | scroll_up  |                 |  
            //                                             | &trans      | &trans      |  &trans | ----- |  &trans      | &trans        | &trans        |
            
            bindings = <
                  &none      &kp F1           &kp F2        &kp F3        &kp F4         &kp F5            &kp F6         &kp F7          &kp F8          &kp F9        &kp F10            &none
                  &none      &kp C_MUTE       &kp C_VOL_DN  &kp C_VOL_UP  &none          &mkp LCLK         &mkp RCLK      &mmv MOVE_LEFT  &mmv MOVE_DOWN  &mmv MOVE_UP  &mmv MOVE_RIGHT    &none
                             &to CON          &none         &none         &none          &kp C_AC_FORWARD  &kp C_AC_BACK  &none           &msc SCRL_DOWN  &msc SCRL_UP  &none
                                                            &trans        &trans         &trans            &trans         &trans          &trans                                                      
            >;
        };

        con { // Layer 4
            // -------------------------------------
            // |   &none    |    none        |  none       |  none       |    none     | none    | ----- |  none       | none F7       |  none         | none       |   none          |  &none  |
            // |   &none    |    none        |  none       |  none       |    none     | none    | ----- |  none       | none          |  none         | none       |   none          |  &none  |
            //              |    none        |  none       |  none       |    none     | none    | ----- |  none       | none          |  none         | none       |   none          |  
            //                                             | &trans      | &trans      |  &trans | ----- |  &trans     | &trans        | &trans        | 
            
            bindings = <
                  &none      &bt BT_SEL 0     &bt BT_SEL 1  &bt BT_SEL 2   &bt BT_SEL 3  &bt BT_SEL 4      &none         &none           &none           &none        &bt BT_CLR         &none
                  &none      &none            &none         &none          &none         &none             &none         &none           &none           &none        &none              &none
                             &none            &none         &none          &none         &none             &none         &none           &none           &none        &none
                                                            &trans         &trans        &trans            &to ALPHA     &trans          &trans                                                      
            >;
        };

    };

};